library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.TIPOS.all;

entity video_mux is
	port(
		clk, reset:		in std_logic;
		
		table_on:				out std_logic;
		table_RGB:				out TYPE_COR;
		
		VGA_R, VGA_G, VGA_B:	out std_logic_vector(9 downto 0)
	);
end video_mux;

architecture arch of video_mux is
	signal R_reg , G_reg,  B_reg:  std_logic_vector(9 downto 0);
	signal R_next,	G_next, B_next: std_logic_vector(9 downto 0);
	
begin
	
	process( clk, reset )
	begin
		if( reset = '1' ) then
			R_reg <= (others => '1' );
			G_reg <= (others => '1' );
			B_reg <= (others => '1' );
		elsif( clk'event and clk='1' ) then
			R_reg <= R_next;
			G_reg <= G_next;
			B_reg <= B_next;
		end if;
	end process;	
	
	process( table_on, table_RGB )
	begin
	R_next <= ( others => '1' );
	G_next <= ( others => '1' );
	B_next <= ( others => '1' );
		if( table_on ) then
			R_next <= ( others => '1' );
			G_next <= ( others => '0' );
			B_next <= ( others => '0' );
		end if;
	end process;
	
end arch;